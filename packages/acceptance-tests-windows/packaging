. ./exiter.ps1

$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

$BOSH_INSTALL_TARGET = Resolve-Path "${env:BOSH_INSTALL_TARGET}"
$env:GO15VENDOREXPERIMENT = 1
$env:GOROOT = "C:\var\vcap\packages\golang1.7-windows\go"
$env:GOPATH = "${BOSH_INSTALL_TARGET}"
$env:PATH = "${env:GOROOT}\bin;${env:PATH}"

# acceptance-tests

New-Item -path "${BOSH_INSTALL_TARGET}/src/github.com/cloudfoundry-incubator/consul-release/src/acceptance-tests" -type directory -force
if ($LASTEXITCODE -ge 8) {
    Write-Error "New-Item -path "${BOSH_INSTALL_TARGET}/src/github.com/cloudfoundry-incubator/consul-release/src/acceptance-tests" -type directory -force"
}

Robocopy.exe /E "${PWD}/acceptance-tests" "${BOSH_INSTALL_TARGET}/src/github.com/cloudfoundry-incubator/consul-release/src/acceptance-tests"
if ($LASTEXITCODE -ge 8) {
    Write-Error "Robocopy.exe /E ${PWD}/acceptance-tests ${BOSH_INSTALL_TARGET}/src/github.com/cloudfoundry-incubator/consul-release/src/acceptance-tests"
}

# check-a-record
New-Item -path "${BOSH_INSTALL_TARGET}/src/github.com/cloudfoundry-incubator/check-a-record" -type directory -force
if ($LASTEXITCODE -ge 8) {
    Write-Error "New-Item -path "${BOSH_INSTALL_TARGET}/src/github.com/cloudfoundry-incubator/check-a-record" -type directory -force"
}

Robocopy.exe /E "${PWD}/acceptance-tests/vendor/github.com/cloudfoundry-incubator/check-a-record" "${BOSH_INSTALL_TARGET}/src/github.com/cloudfoundry-incubator"
if ($LASTEXITCODE -ge 8) {
    Write-Error "Robocopy.exe /E ${PWD}/acceptance-tests/vendor/github.com/cloudfoundry-incubator/check-a-record ${BOSH_INSTALL_TARGET}/src/github.com/cloudfoundry-incubator"
}

go.exe install "github.com/cloudfoundry-incubator/consul-release/src/acceptance-tests/testing/testconsumer"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error installing: testconsumer"
}
go.exe install "github.com/cloudfoundry-incubator/consul-release/src/acceptance-tests/testing/fake-dns-server"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error installing: fake-dns-server"
}
go.exe install "github.com/cloudfoundry-incubator/consul-release/src/acceptance-tests/vendor/github.com/cloudfoundry-incubator/check-a-record"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error installing: check-a-record"
}

Exit 0
