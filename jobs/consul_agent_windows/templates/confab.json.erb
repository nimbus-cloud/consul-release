<%=

  def discover_external_ip
    networks = spec.networks.marshal_dump

    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end

    if !network
      _, network = networks.first
    end

    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end

    network.ip
  end

  def consul
    config = p('consul')
    config["agent"]["mode"] = 'client'
    config
  end

  {
    node: {
      name: name,
      index: spec.index,
      external_ip: discover_external_ip,
      zone: spec.az,
    },
    path: {
      agent_path: "/var/vcap/packages/consul-windows/bin/consul",
      consul_config_dir: "/var/vcap/jobs/consul_agent_windows/config",
      data_dir: "/var/vcap/data/consul_agent_windows",
      keyring_file: "/var/vcap/data/consul_agent_windows/serf/local.keyring",
      pid_file: "/var/vcap/sys/log/consul_agent_windows/consul_agent.pid",
    },
    consul: consul,
  }.to_json
%>
